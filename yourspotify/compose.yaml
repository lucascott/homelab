networks:
  reverse-proxy:
    external: true

volumes:
  database: {}

services:
  server:
    image: yooooomi/your_spotify_server:latest
    restart: unless-stopped
    networks:
      - default
      - reverse-proxy
    links:
      - mongo
    depends_on:
      - mongo
    env_file: SPOTIFY_SECRET.secret
    environment:
      API_ENDPOINT: https://${COMPOSE_PROJECT_NAME}.lucascott.com/api
      CLIENT_ENDPOINT: https://${COMPOSE_PROJECT_NAME}.lucascott.com
      SPOTIFY_PUBLIC: a824ddd1243546459415bc2eaba3db6c
      TIMEZONE: Europe/Helsinki
    labels:

      - traefik.enable=true
      - traefik.http.routers.${COMPOSE_PROJECT_NAME}-api.rule=Host(`${COMPOSE_PROJECT_NAME}.lucascott.com`)
        && PathPrefix(`/api`)
      - traefik.http.routers.${COMPOSE_PROJECT_NAME}-api.entrypoints=websecure
      - traefik.http.routers.${COMPOSE_PROJECT_NAME}-api.tls=true
      - traefik.http.routers.${COMPOSE_PROJECT_NAME}-api.tls.certresolver=letsencrypt-dns
      - traefik.http.routers.${COMPOSE_PROJECT_NAME}-api.tls.domains[0].sans=*.lucascott.com
      - traefik.http.middlewares.${COMPOSE_PROJECT_NAME}-api-strip.stripprefix.prefixes=/api
      - traefik.http.routers.${COMPOSE_PROJECT_NAME}-api.middlewares=yourspotify-api-strip@docker
      - traefik.http.services.${COMPOSE_PROJECT_NAME}-api.loadbalancer.server.port=8080
  mongo:
    image: mongo:6
    restart: unless-stopped
    volumes:
      - database:/data/db
    labels:
      - wud.watch.digest=true
      - wud.tag.exclude=^.*$

  web:
    image: yooooomi/your_spotify_client:latest
    restart: unless-stopped
    networks:
      - default
      - reverse-proxy
    environment:
      API_ENDPOINT: https://${COMPOSE_PROJECT_NAME}.lucascott.com/api
      TIMEZONE: Europe/Helsinki
    labels:
      - traefik.enable=true
      - traefik.http.routers.${COMPOSE_PROJECT_NAME}.rule=Host(`${COMPOSE_PROJECT_NAME}.lucascott.com`)
      - traefik.http.routers.${COMPOSE_PROJECT_NAME}.entrypoints=websecure
      - traefik.http.routers.${COMPOSE_PROJECT_NAME}.tls=true
      - traefik.http.routers.${COMPOSE_PROJECT_NAME}.tls.certresolver=letsencrypt-dns
      - traefik.http.routers.${COMPOSE_PROJECT_NAME}.tls.domains[0].sans=*.lucascott.com
      - traefik.http.services.${COMPOSE_PROJECT_NAME}.loadbalancer.server.port=3000
